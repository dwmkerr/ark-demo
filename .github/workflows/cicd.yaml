name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  mcp-servers:
    name: Build MCP Servers
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        server: [shell-mcp]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build, lint and test
        run: |
          cd mcp-servers/${{ matrix.server }}
          make init
          make lint
          make test
          make build

      - name: Validate Chart
        run: |
          cd mcp-servers/${{ matrix.server }}
          helm lint ./chart
          helm template test ./chart

  release:
    runs-on: ubuntu-24.04
    outputs:
      released: ${{ steps.release-please.outputs.release_created || 'false' }}
      tag: ${{ steps.release-please.outputs.tag_name || 'v0.0.0-test' }}
    steps:
      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: googleapis/release-please-action@v4
        id: release-please
        with:
          manifest-file: .github/release-please-manifest.json
          config-file: .github/release-please-config.json

  # Disabled for now - skip main chart release
  # release-helm:
  #   name: Release Helm Chart
  #   needs: [release]
  #   if: ${{ needs.release.outputs.released }}
  #   runs-on: ubuntu-24.04
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Log in to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract version from tag
  #       id: version
  #       run: |
  #         VERSION=${{ needs.release.outputs.tag }}
  #         echo "version=${VERSION#v}" >> $GITHUB_OUTPUT

  #     - name: Update Helm dependencies
  #       run: helm dependency update ./chart

  #     - name: Package and push Helm chart
  #       run: |
  #         helm package ./chart
  #         helm push dwmkerr-starter-kit-${{ steps.version.outputs.version }}.tgz oci://ghcr.io/${{ github.repository_owner }}/charts

  release-mcp-servers:
    name: Release MCP Server
    needs: [mcp-servers, release]
    if: ${{ needs.release.outputs.released == 'true' }}
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        server: [shell-mcp]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${{ needs.release.outputs.tag }}
          echo "version=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        run: |
          cd mcp-servers/${{ matrix.server }}/server
          docker build -t ghcr.io/${{ github.repository }}/${{ matrix.server }}:${{ steps.version.outputs.version }} .
          docker push ghcr.io/${{ github.repository }}/${{ matrix.server }}:${{ steps.version.outputs.version }}

      - name: Package and push Helm chart
        run: |
          cd mcp-servers/${{ matrix.server }}
          helm package ./chart --version ${{ steps.version.outputs.version }} --app-version ${{ steps.version.outputs.version }}
          helm push ${{ matrix.server }}-${{ steps.version.outputs.version }}.tgz oci://ghcr.io/${{ github.repository_owner }}/charts
